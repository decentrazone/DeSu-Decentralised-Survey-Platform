type Token = 
 service {
   allowance: (principal, principal) -> (nat) query;
   approve: (principal, nat) -> (bool);
   balanceOf: (principal) -> (nat) query;
   burn: (principal, nat) -> (bool);
   decimals: () -> (nat) query;
   mint: (principal, nat) -> (bool);
   name: () -> (text) query;
   owner: () -> (principal) query;
   symbol: () -> (text) query;
   totalSupply: () -> (nat) query;
   transfer: (principal, nat) -> (bool);
   transferFrom: (principal, principal, nat) -> (bool);
   wallet_receive: () -> (record {accepted: nat64;});
 };
type Survey = 
 record {
   desc: text;
   id: opt text;
   participants: opt nat;
   questions: vec Question;
   stake: opt nat;
 };
type Question = 
 record {
   id: text;
   "text": text;
 };
service : {
  createSurveyRecord: (Survey) -> ();
  getToken: () -> (Token);
  init: () -> ();
}
